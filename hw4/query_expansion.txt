Query Expansion

The method is rather straightforward. The idea is to expand the query using thesaurus.
For each term in the query, find the synonym using the thesaurus, append them to the
original query and then proceed to search.

*** Design ***

We were using word2vector to train a language model for synonyms using the content
part of all the documents. Then for each term in query, use the trained model to find
synonym. After that, append all synonyms to the original query and do normal search.

*** Result ***

It works and the result is surprisingly better than we expected. Generally speaking
the query time increases due to finding synonyms, especially for long queries.
However, we could see some good results from the experiments. For instance, we have
tried some searches and the results are the following: (top 5 were
examined)

Every document is described as a doc id and followed by short descriptions or some
keywords from the file

drug selling:
2432961: traffic in a controlled drug
2153366: Narcotic drug trading
2433122: holding not proved Food and Drugs
2434235: Narcotics—Trafficking—Drug sold
2431790: offence of illegally selling a drug

car crashes:
2431551: motor car onto a railway right-of-way and left it on the tracks where a train crashed into it
2851048: not wearing a crash helmet, motor car
6799180: personal injuries caused by a street car, crash of the tools
2623506: single‑vehicle accident “driving the vehicle when the crash occurred”
6801764: single‑vehicle accident
(interestingly, 2623506 and 6801764 have the same content)

Firstly, the query extension would not affect normal search as seen from example
one. Then, from doc 2623506 we notice that instead of sticking to the keyword
"car", a more formal word "vehicle" is utilized for search term, which is good as
sometimes this may help when the search engine is used by those who are not professionals.

*** Possible Improvement ***

This approach does not help when the user is not sure about the keywords. In other
words, it cannot abstract out ideas from free text and extend the query. A possible
improvement would be utilizing pseudo relevance feedback, which is to find key terms
from the first retrieved documents and do search again based on them.
